on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag'     
        required: true
        default: 'v1.18.0'
      upload:
        type: boolean
        description: Include  emojis

name: Create Release

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.tag }}
          release_name: Release ${{ github.event.inputs.tag }}
          draft: false
          prerelease: false
  win:
    name: Create Windows Release
    runs-on: windows-latest
    needs: create_release
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build project # This would actually build your project, using zip for an example artifact
        run: |
          yarn
          yarn build:winactions
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./dist/YouTube Music Setup ${{ github.event.inputs.tag }}.exe
          asset_name: YouTube-Music-Setup-${{ github.event.inputs.tag }}.exe
          asset_content_type: application/x-msdownload
  linux:
    name: Create Linux Release
    runs-on: ubuntu-latest
    needs: create_release
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build project
        run: |
          yarn
          yarn build:linuxactions
      - name: Upload Snap Asset
        id: upload-snap-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./dist/youtube-music_${{ github.event.inputs.tag }}_amd64.snap
          asset_name: Youtube-Music-${{ github.event.inputs.tag }}.snap
          asset_content_type: application/octet-stream
      - name: Upload Debian Asset
        id: upload-debian-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./dist/youtube-music_${{ github.event.inputs.tag }}_amd64.deb
          asset_name: Youtube-Music-${{ github.event.inputs.tag }}.deb
          asset_content_type: application/x-debian-package
      - name: Upload AppImage Asset
        id: upload-appimage-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./dist/YouTube Music-${{ github.event.inputs.tag }}.AppImage
          asset_name: Youtube-Music-${{ github.event.inputs.tag }}.appimage
          asset_content_type: application/octet-stream
      - name: Upload FreeBSD Asset
        id: upload-freebsd-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./dist/youtube-music-${{ github.event.inputs.tag }}.freebsd
          asset_name: Youtube-Music-${{ github.event.inputs.tag }}.freebsd
          asset_content_type: application/octet-stream
